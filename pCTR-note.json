{"paragraphs":[{"text":"%md\n# CS 5304 Assignments #2\nBy Mengran Wang (mw866@cornell.edu)","user":"anonymous","dateUpdated":"2017-04-23T23:37:54-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1493005023932_-293168309","id":"20170423-233703_1256560744","dateCreated":"2017-04-23T23:37:03-0400","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2199","dateFinished":"2017-04-23T23:37:54-0400","dateStarted":"2017-04-23T23:37:54-0400","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>CS 5304 Assignments #2</h1>\n<p>By Mengran Wang (<a href=\"mailto:&#109;w&#56;&#x36;&#x36;&#x40;&#x63;&#111;&#x72;&#x6e;e&#108;&#x6c;&#46;e&#100;&#117;\">&#109;w&#56;&#x36;&#x36;&#x40;&#x63;&#111;&#x72;&#x6e;e&#108;&#x6c;&#46;e&#100;&#117;</a>)</p>\n</div>"}]}},{"text":"%pyspark\nimport numpy as np\nfrom pyspark.sql.functions import *\nfrom pyspark.sql.types import *\nfrom pyspark.sql import functions\nfrom __future__ import division","user":"anonymous","dateUpdated":"2017-04-23T23:36:53-0400","config":{"lineNumbers":false,"tableHide":false,"editorSetting":{"language":"python","editOnDblClick":false},"colWidth":6,"editorMode":"ace/mode/python","results":{"0":{"graph":{"mode":"table","height":464,"optionOpen":false}}},"enabled":true,"title":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1492892844428_-2054507981","id":"20170421-215501_851260905","dateCreated":"2017-04-22T16:27:24-0400","dateStarted":"2017-04-23T22:29:29-0400","dateFinished":"2017-04-23T22:30:10-0400","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:278","title":""},{"text":"%pyspark\nimport os.path\ndir_name = \"/Users/kylin1989/Downloads/data\"","user":"anonymous","dateUpdated":"2017-04-23T23:33:54-0400","config":{"colWidth":6,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1492917148555_830710873","id":"20170422-231228_1157319022","dateCreated":"2017-04-22T23:12:28-0400","dateStarted":"2017-04-23T22:30:20-0400","dateFinished":"2017-04-23T22:30:20-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:279"},{"text":"%pyspark\nspark = SparkSession.builder.appName(\"pCTR\").config(\"spark.sql.broadcastTimeout\", \"1200\").getOrCreate()","user":"anonymous","dateUpdated":"2017-04-23T23:17:43-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1493002740890_-250572492","id":"20170423-225900_1904584632","dateCreated":"2017-04-23T22:59:00-0400","dateStarted":"2017-04-23T23:17:43-0400","dateFinished":"2017-04-23T23:18:03-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:280"},{"title":"Load descriptionid_tokensid.txt","text":"%pyspark\ndescriptionid_tokensid = sqlContext.read.format(\"com.databricks.spark.csv\").options(delimiter=\"\\t\").load(os.path.join(dir_name, \"descriptionid_tokensid.txt\"))\ndescriptionid_tokensid","user":"anonymous","dateUpdated":"2017-04-23T22:37:34-0400","config":{"colWidth":6,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"DataFrame[_c0: string, _c1: string]\n"}]},"apps":[],"jobName":"paragraph_1492916966724_-1680822677","id":"20170422-230926_1549676367","dateCreated":"2017-04-22T23:09:26-0400","dateStarted":"2017-04-23T22:37:35-0400","dateFinished":"2017-04-23T22:37:35-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:281"},{"title":"Load purchasedkeywordid_tokensid.txt","text":"%pyspark\npurchasedkeywordid_tokensid = sqlContext.read.format(\"com.databricks.spark.csv\").options(delimiter=\"\\t\").load(os.path.join(dir_name, \"purchasedkeywordid_tokensid.txt\"))\npurchasedkeywordid_tokensid","user":"anonymous","dateUpdated":"2017-04-23T22:37:28-0400","config":{"colWidth":6,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"DataFrame[_c0: string, _c1: string]\n"}]},"apps":[],"jobName":"paragraph_1492917810620_-417484601","id":"20170422-232330_2027512770","dateCreated":"2017-04-22T23:23:30-0400","dateStarted":"2017-04-23T22:37:28-0400","dateFinished":"2017-04-23T22:37:29-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:282"},{"title":"Load queryid_tokensid.tx","text":"%pyspark\nqueryid_tokensid = sqlContext.read.format(\"com.databricks.spark.csv\").options(delimiter=\"\\t\").load(os.path.join(dir_name, \"queryid_tokensid.txt\"))\nqueryid_tokensid","user":"anonymous","dateUpdated":"2017-04-23T22:37:27-0400","config":{"colWidth":6,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"},"title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"DataFrame[_c0: string, _c1: string]\n"}]},"apps":[],"jobName":"paragraph_1492892844434_-2042965514","id":"20170422-142536_891748670","dateCreated":"2017-04-22T16:27:24-0400","dateStarted":"2017-04-23T22:37:27-0400","dateFinished":"2017-04-23T22:37:28-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:283"},{"title":" Load titleid_tokensid.txt","text":"%pyspark\ntitleid_tokensid = sqlContext.read.format(\"com.databricks.spark.csv\").options(delimiter=\"\\t\").load(os.path.join(dir_name, \"titleid_tokensid.txt\"))\ntitleid_tokensid","user":"anonymous","dateUpdated":"2017-04-23T22:37:32-0400","config":{"colWidth":6,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"DataFrame[_c0: string, _c1: string]\n"}]},"apps":[],"jobName":"paragraph_1492917677429_-311060753","id":"20170422-232117_650626617","dateCreated":"2017-04-22T23:21:17-0400","dateStarted":"2017-04-23T22:37:32-0400","dateFinished":"2017-04-23T22:37:32-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:284"},{"title":"Load userid_profile.txt","text":"%pyspark\nuserid_profile = sqlContext.read.format(\"com.databricks.spark.csv\").options(delimiter=\"\\t\").load(os.path.join(dir_name, \"userid_profile.txt\"))\nuserid_profile","user":"anonymous","dateUpdated":"2017-04-23T22:37:26-0400","config":{"colWidth":6,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"DataFrame[_c0: string, _c1: string, _c2: string]\n"}]},"apps":[],"jobName":"paragraph_1492917685047_88860275","id":"20170422-232125_1561285407","dateCreated":"2017-04-22T23:21:25-0400","dateStarted":"2017-04-23T22:37:26-0400","dateFinished":"2017-04-23T22:37:27-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:285"},{"title":"Load training.txt","text":"%pyspark\ntraining = sqlContext.read.format(\"com.databricks.spark.csv\").options(header=\"false\", inferSchema=\"true\", delimiter=\"\\t\").load(os.path.join(dir_name,\"training.txt\"))\n\ntraining = training.withColumnRenamed('_c0', 'Click').withColumnRenamed('_c1', 'Impression').withColumnRenamed('_c2', 'DisplayURL').withColumnRenamed('_c3', 'AdID').withColumnRenamed('_c4', 'AdvertiserID').withColumnRenamed('_c5', 'Depth').withColumnRenamed('_c6', 'Position').withColumnRenamed('_c7', 'QueryID').withColumnRenamed('_c8', 'KeywordID').withColumnRenamed('_c9', 'TitleID').withColumnRenamed('_c10', 'DescriptionID').withColumnRenamed('_c11', 'UserID')\ntraining","user":"anonymous","dateUpdated":"2017-04-23T23:33:55-0400","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"},"title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- Click: integer (nullable = true)\n |-- Impression: integer (nullable = true)\n |-- DisplayURL: decimal(20,0) (nullable = true)\n |-- AdID: integer (nullable = true)\n |-- AdvertiserID: integer (nullable = true)\n |-- Depth: integer (nullable = true)\n |-- Position: integer (nullable = true)\n |-- QueryID: integer (nullable = true)\n |-- KeywordID: integer (nullable = true)\n |-- TitleID: integer (nullable = true)\n |-- DescriptionID: integer (nullable = true)\n |-- UserID: integer (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1492892844431_-2054123232","id":"20170421-221742_2093965047","dateCreated":"2017-04-22T16:27:24-0400","dateStarted":"2017-04-23T22:31:24-0400","dateFinished":"2017-04-23T22:35:59-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:286"},{"title":"Load test.txt","text":"%pyspark\ntest = sqlContext.read.format(\"com.databricks.spark.csv\").options(header=\"false\", inferSchema=\"true\", delimiter=\"\\t\").load(os.path.join(dir_name,\"test.txt\"))\ntest = training.withColumnRenamed('_c0', 'DisplayURL').withColumnRenamed('_c1', 'AdID').withColumnRenamed('_c2', 'AdvertiserID').withColumnRenamed('_c3', 'Depth').withColumnRenamed('_c4', 'Position').withColumnRenamed('_c5', 'QueryID').withColumnRenamed('_c6', 'KeywordID').withColumnRenamed('_c7', 'TitleID').withColumnRenamed('_c8', 'DescriptionID').withColumnRenamed('_c9', 'UserID')\ntest","user":"anonymous","dateUpdated":"2017-04-23T23:33:55-0400","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"},"title":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- Click: integer (nullable = true)\n |-- Impression: integer (nullable = true)\n |-- DisplayURL: decimal(20,0) (nullable = true)\n |-- AdID: integer (nullable = true)\n |-- AdvertiserID: integer (nullable = true)\n |-- Depth: integer (nullable = true)\n |-- Position: integer (nullable = true)\n |-- QueryID: integer (nullable = true)\n |-- KeywordID: integer (nullable = true)\n |-- TitleID: integer (nullable = true)\n |-- DescriptionID: integer (nullable = true)\n |-- UserID: integer (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1493000444586_2092285630","id":"20170423-222044_532393071","dateCreated":"2017-04-23T22:20:44-0400","dateStarted":"2017-04-23T22:32:13-0400","dateFinished":"2017-04-23T22:36:39-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:287"},{"text":"%md\n## PART 2 (non-Big-Data)\nidentify the top 25,000 instances with the same ad id and query by frequency from the training set. Select all instances using these ad id/query id combos for the training set. Only operate on this subset of the training for the remainder of the assignment. Operate on the full test set for the remainder of the assignment.\n","user":"anonymous","dateUpdated":"2017-04-23T15:21:09-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>PART 2 (non-Big-Data)</h2>\n<p>identify the top 25,000 instances with the same ad id and query by frequency from the training set. Select all instances using these ad id/query id combos for the training set. Only operate on this subset of the training for the remainder of the assignment. Operate on the full test set for the remainder of the assignment.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1492975190465_589883785","id":"20170423-151950_157799325","dateCreated":"2017-04-23T15:19:50-0400","dateStarted":"2017-04-23T15:21:09-0400","dateFinished":"2017-04-23T15:21:09-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:288"},{"title":"Identify the top25k AdID-QueryID combination by the frequence of instances in the training dataset","text":"%pyspark\ntraining_top25k_AdID_QueryID = training.groupBy(\"AdID\", \"QueryID\").count().sort(desc(\"count\")).limit(25000)\ntraining_top25k_AdID_QueryID\n# print(training_top25k_AdID_QueryID.count())","user":"anonymous","dateUpdated":"2017-04-23T22:38:03-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"DataFrame[AdID: int, QueryID: int, count: bigint]\n"}]},"apps":[],"jobName":"paragraph_1492918411251_-223496179","id":"20170422-233331_1614972558","dateCreated":"2017-04-22T23:33:31-0400","dateStarted":"2017-04-23T22:38:03-0400","dateFinished":"2017-04-23T22:38:04-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:289"},{"title":"Filter the training using the identified the top25k AdID-QueryID combinations","text":"%pyspark\ntraining_top25K = training.join(training_top25k_AdID_QueryID.drop(\"count\"), ['AdID', 'QueryID'], 'inner')\ntraining_top25K","user":"anonymous","dateUpdated":"2017-04-23T22:39:44-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"DataFrame[AdID: int, QueryID: int, Click: int, Impression: int, DisplayURL: decimal(20,0), AdvertiserID: int, Depth: int, Position: int, KeywordID: int, TitleID: int, DescriptionID: int, UserID: int]\n"}]},"apps":[],"jobName":"paragraph_1492975731673_-1468556768","id":"20170423-152851_2110849751","dateCreated":"2017-04-23T15:28:51-0400","dateStarted":"2017-04-23T22:39:44-0400","dateFinished":"2017-04-23T22:39:44-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:290"},{"text":"%md\n## PART 3 \nCompute a position and depth normalized click-through-rate for each identifier, as well as combinations (conjunctions) of these identifiers.\n","user":"anonymous","dateUpdated":"2017-04-23T21:05:45-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>PART 3</h2>\n<p>Compute a position and depth normalized click-through-rate for each identifier, as well as combinations (conjunctions) of these identifiers.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1492975732832_-646348368","id":"20170423-152852_1407717236","dateCreated":"2017-04-23T15:28:52-0400","dateStarted":"2017-04-23T21:05:45-0400","dateFinished":"2017-04-23T21:05:45-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:291"},{"title":"Add CTR column","text":"%pyspark\ntraining_top25K_CTR = training_top25K.withColumn('CTR', training_top25K.Click/training_top25K.Impression)\ntraining_top25K_CTR","user":"anonymous","dateUpdated":"2017-04-23T23:18:20-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"DataFrame[AdID: int, QueryID: int, Click: int, Impression: int, DisplayURL: decimal(20,0), AdvertiserID: int, Depth: int, Position: int, KeywordID: int, TitleID: int, DescriptionID: int, UserID: int, CTR: double]\n"}]},"apps":[],"jobName":"paragraph_1492996033107_-2032875988","id":"20170423-210713_754289250","dateCreated":"2017-04-23T21:07:13-0400","dateStarted":"2017-04-23T23:18:20-0400","dateFinished":"2017-04-23T23:18:20-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:292"},{"title":"Assemble CTR, Position and Depth for normalization","text":"%pyspark\nfrom pyspark.ml.linalg import Vectors\nfrom pyspark.ml.feature import VectorAssembler\nassembler = VectorAssembler(\n    inputCols=[\"CTR\", \"Position\", \"Depth\"],\n    outputCol=\"features\")\ntraining_top25K_assembled = assembler.transform(training_top25K_CTR)\ntraining_top25K_assembled","user":"anonymous","dateUpdated":"2017-04-23T23:18:26-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"DataFrame[AdID: int, QueryID: int, Click: int, Impression: int, DisplayURL: decimal(20,0), AdvertiserID: int, Depth: int, Position: int, KeywordID: int, TitleID: int, DescriptionID: int, UserID: int, CTR: double, features: vector]\n"}]},"apps":[],"jobName":"paragraph_1492996980354_326707986","id":"20170423-212300_811037492","dateCreated":"2017-04-23T21:23:00-0400","dateStarted":"2017-04-23T23:18:26-0400","dateFinished":"2017-04-23T23:18:28-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:293"},{"title":"Normalize features (CTR, Position and Depth)","text":"%pyspark\nfrom pyspark.ml.feature import Normalizer\nnormalizer = Normalizer(inputCol=\"features\", outputCol=\"normFeatures\", p=1.0)\ntraining_top25K_normalized = normalizer.transform(training_top25K_assembled).drop('features')\ntraining_top25K_normalized","user":"anonymous","dateUpdated":"2017-04-23T23:28:54-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"DataFrame[AdID: int, QueryID: int, Click: int, Impression: int, DisplayURL: decimal(20,0), AdvertiserID: int, Depth: int, Position: int, KeywordID: int, TitleID: int, DescriptionID: int, UserID: int, CTR: double, normFeatures: vector]\n"}]},"apps":[],"jobName":"paragraph_1492997326177_1578246373","id":"20170423-212846_196516663","dateCreated":"2017-04-23T21:28:46-0400","dateStarted":"2017-04-23T23:28:54-0400","dateFinished":"2017-04-23T23:29:19-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:294"},{"text":"%md\n## PART 4\nAnnotate each instance in the training and testing set with the normalized click through rates. Submit these 2 data sets with the code for parts 1 – 4.","user":"anonymous","dateUpdated":"2017-04-23T21:05:53-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>PART 4</h2>\n<p>Annotate each instance in the training and testing set with the normalized click through rates. Submit these 2 data sets with the code for parts 1 – 4.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1492995915775_790241231","id":"20170423-210515_1452637488","dateCreated":"2017-04-23T21:05:15-0400","dateStarted":"2017-04-23T21:05:53-0400","dateFinished":"2017-04-23T21:05:53-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:295"},{"title":"Extract the normalized CTR","text":"%pyspark\n# from pyspark.ml.feature import VectorSlicer\ndef extract_normCTR(normFeature):\n    return normFeature.values[0].item() \nextract_normCTR_udf = functions.udf(extract_normCTR, FloatType())\n\ntraining_top25K_normalized_udf = training_top25K_normalized.select('*', extract_normCTR_udf(training_top25K_normalized.normFeatures).alias('extractNormCTRudf'))\ntraining_top25K_normCTR = training_top25K_normalized_udf.withColumn('normCTR', training_top25K_normalized_udf.extractNormCTRudf).drop('extractNormCTRudf').drop('normFeatures')\ntraining_top25K_normCTR","user":"anonymous","dateUpdated":"2017-04-23T23:29:52-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1492997309913_-643324425","id":"20170423-212829_396942010","dateCreated":"2017-04-23T21:28:29-0400","dateStarted":"2017-04-23T23:29:53-0400","dateFinished":"2017-04-23T23:18:36-0400","status":"RUNNING","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:296"},{"title":"Save training dataset for ML","text":"%pyspark\ntraining_top25K_normCTR.coalesce(1).write.format(\"com.databricks.spark.csv\").options(header=\"true\").save(os.path.join(dir_name,\"training_top25K\"))","user":"anonymous","dateUpdated":"2017-04-23T23:41:04-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1493003743413_-1144707034","id":"20170423-231543_1345825894","dateCreated":"2017-04-23T23:15:43-0400","dateStarted":"2017-04-23T23:18:42-0400","dateFinished":"2017-04-23T23:18:53-0400","status":"ABORT","progressUpdateIntervalMs":500,"$$hashKey":"object:297"},{"title":"Save test dataset for ML","text":"%pyspark\ntest.coalesce(1).write.format(\"com.databricks.spark.csv\").options(header=\"true\").save(os.path.join(dir_name,\"training_top25K\"))","user":"anonymous","dateUpdated":"2017-04-23T23:18:45-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1493003770167_-1172378306","id":"20170423-231610_1803929984","dateCreated":"2017-04-23T23:16:10-0400","status":"ABORT","progressUpdateIntervalMs":500,"$$hashKey":"object:298"},{"text":"%md\n## PART 5\nShape the data into feature vectors suitable for input into machine learning. Describe a selected learning model and the shaping selected using empirical analysis of the data. Note that you may select any model type from the Spark library and your submission will not be judged by whether your selected model turns out to be the best model for the problem. For assignment #2, you DO NOT need to implement the machine learning model. Submit the code and the training/testing data sets generated for Part 5.","user":"anonymous","dateUpdated":"2017-04-23T21:05:34-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>PART 5</h2>\n<p>Shape the data into feature vectors suitable for input into machine learning. Describe a selected learning model and the shaping selected using empirical analysis of the data. Note that you may select any model type from the Spark library and your submission will not be judged by whether your selected model turns out to be the best model for the problem. For assignment #2, you DO NOT need to implement the machine learning model. Submit the code and the training/testing data sets generated for Part 5.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1492977005280_504455850","id":"20170423-155005_46408624","dateCreated":"2017-04-23T15:50:05-0400","dateStarted":"2017-04-23T21:05:34-0400","dateFinished":"2017-04-23T21:05:35-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:299"},{"text":"%md\n### Answer\nI select the Logistic Regression model for the following reasons:\n* the pCTR is a float, this is a regression problem\n* logistic regression has a decent performance","user":"anonymous","dateUpdated":"2017-04-23T23:32:14-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Answer</h3>\n<p>I select the Logistic Regression model for the following reasons:<br/>* the pCTR is a float, this is a regression problem<br/>* logistic regression has a decent performance</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1492995934848_-1688095001","id":"20170423-210534_372251776","dateCreated":"2017-04-23T21:05:34-0400","dateStarted":"2017-04-23T23:32:14-0400","dateFinished":"2017-04-23T23:32:14-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:300"},{"text":"%pyspark\nvector_assembler = VectorAssembler(\n    inputCols=['AdID', 'QueryID', 'DisplayURL', 'AdvertiserID', 'Depth', 'Position', 'KeywordID', 'TitleID', 'DescriptionID', 'UserID'],\n    outputCol=\"features\")","user":"anonymous","dateUpdated":"2017-04-23T23:36:17-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1493004928721_-1782805492","id":"20170423-233528_1657420097","dateCreated":"2017-04-23T23:35:28-0400","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2092","title":"Create assembler for shaping"},{"title":"Shaping training dataset","text":"%pyspark\ntraining_top25K_normCTR_assembled = vector_assembler.transform(training_top25K_normCTR)\ntraining_top25K_normCTR_assembled","user":"anonymous","dateUpdated":"2017-04-23T23:35:46-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1493004058607_-394017602","id":"20170423-232058_1855626306","dateCreated":"2017-04-23T23:20:58-0400","dateStarted":"2017-04-23T23:35:46-0400","dateFinished":"2017-04-23T23:35:48-0400","status":"ABORT","progressUpdateIntervalMs":500,"$$hashKey":"object:301"},{"title":"Shaping test dataset","text":"%pyspark\ntest_assembled = vector_assembler.transform(test)\ntest_assembled","user":"anonymous","dateUpdated":"2017-04-23T23:42:42-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python","title":true,"editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1493004744302_-1765215956","id":"20170423-233224_1767140216","dateCreated":"2017-04-23T23:32:24-0400","status":"PENDING","progressUpdateIntervalMs":500,"$$hashKey":"object:302","dateStarted":"2017-04-23T23:42:42-0400","errorMessage":""},{"text":"%pyspark\n","user":"anonymous","dateUpdated":"2017-04-23T23:42:42-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1493005362444_1152255043","id":"20170423-234242_351520657","dateCreated":"2017-04-23T23:42:42-0400","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3354"}],"name":"pCTR/note","id":"2CGDKZJCG","angularObjects":{"2CF6E122K:shared_process":[],"2CH1G59ET:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}